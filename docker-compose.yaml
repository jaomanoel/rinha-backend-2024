version: "3.9"

services:
  api01: &api
    build:
      context: .
      dockerfile: Dockerfile
    hostname: api01
    environment:
      DATABASE_URL: "user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} host=db dbname=${POSTGRES_DB}"
    ports:
      - "8081:8080"
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "100MB"

  api02:
    <<: *api
    hostname: api02
    environment:
      DATABASE_URL: "user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} host=db dbname=${POSTGRES_DB}"
    ports:
      - "8082:8080"

  db:
    image: postgres:alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    command:
      ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.9"
          memory: "400MB"

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "50MB"

networks:
  default:
    driver: bridge
    name: rinha-nginx-2024q1
